name: Test

# Definira, kdaj se bo workflow izvajal
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Prvo opravilo: preveri, če obstajajo testne datoteke
  check-tests:
    name: Check for Tests
    runs-on: self-hosted
    outputs:
      tests_exist: ${{ steps.check.outputs.tests_exist }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Check for test files
        id: check
        run: |
          # Aktivno zapisovanje v datoteko napak
          echo "=== Začetek preverjanja testnih datotek ob $(date) ===" > napaka.txt
          echo "Izvajanje v direktoriju: $(pwd)" >> napaka.txt
          
          # Iskanje testnih datotek in preverjanje rezultatov
          test_files=$(find . -name "*test*.cpp" -o -name "*Test*.cpp" 2>> napaka.txt)
          
          if [ -n "$test_files" ]; then
            echo "Najdene testne datoteke:" >> napaka.txt
            echo "$test_files" >> napaka.txt
            echo "Tests found in the repository"
            echo "tests_exist=true" >> $GITHUB_OUTPUT
          else
            echo "NAPAKA: V repozitoriju ni bilo najdenih testnih datotek!" >> napaka.txt
            echo "To bo povzročilo neuspeh postopka, saj je testiranje obvezno." >> napaka.txt
            echo "Prosimo, dodajte ustrezne testne datoteke." >> napaka.txt
            echo "No tests found in the repository"
            echo "tests_exist=false" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: Display error log
        run: |
          echo "Vsebina datoteke napaka.txt:"
          cat napaka.txt
          # Shranimo kopijo za drugi job
          mkdir -p /tmp/workflow-artifacts
          cp napaka.txt /tmp/workflow-artifacts/
        if: always()  # Ta korak se vedno izvede, tudi če prejšnji koraki ne uspejo

  # Drugo opravilo: izvajanje testov
  run-tests:
    name: Run Tests
    needs: check-tests
    runs-on: self-hosted
    if: ${{ needs.check-tests.outputs.tests_exist == 'true' }}
    
    # Matrica za testiranje v različnih konfiguracijah
    strategy:
      matrix:
        build_type: [Debug, Release]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Check error log
        run: |
          if [ -f /tmp/workflow-artifacts/napaka.txt ]; then
            echo "Vsebina datoteke napaka.txt iz prejšnjega opravila:"
            cat /tmp/workflow-artifacts/napaka.txt
          else
            echo "Dnevnik napak ni bil najden"
          fi
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libgtest-dev
      
      - name: Configure and build
        run: |
          mkdir -p build
          cd build
          # Uporaba matrice - vrednost build_type se nastavi glede na trenutno izvajanje
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make
      
      - name: Run tests
        working-directory: build
        run: ctest --verbose
